// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  email          String          @unique
  name           String
  picture        String
  role           UserRole        @default(USER)
  routines       Routine[]
  workouts       Workout[]
  sharedRoutines SharedRoutine[]
  sessions       Session[] // ✅ 1:N 관계로 변경
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId]) // 인덱스를 두면 유저별 세션 조회가 빨라집니다
}

enum UserRole {
  USER
  PREMIUM
  ADMIN
}

model Routine {
  id          String         @id @default(cuid())
  title       String
  description String?
  days        Json // { day: string, exercises: Exercise[] }[]
  isShared    Boolean        @default(false)
  userId      String
  user        User           @relation(fields: [userId], references: [id])
  shared      SharedRoutine?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model SharedRoutine {
  id        String   @id @default(cuid())
  routineId String   @unique
  routine   Routine  @relation(fields: [routineId], references: [id])
  sharedBy  String
  user      User     @relation(fields: [sharedBy], references: [id])
  likes     Int      @default(0)
  tags      String[] // ex) ['하체', '초보', '30분']
  createdAt DateTime @default(now())
}

model Workout {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  date        DateTime
  routineName String
  records     Json // [{ exercise: "벤치프레스", sets: [{ reps: 10, weight: 60 }] }]
  memo        String?
  createdAt   DateTime @default(now())
}
